#!/usr/bin/env node

var proxy = require('../lib/server.js');

var argv = require('optimist')
  .usage('Throttle HTTP proxy server')
  .describe('speed', 'throttle network speed to value')
  .default('speed', 100000)
  .alias('speed', 's')
  .describe('port', 'incoming port number')
  .default('port', 3128)
  .alias('port', 'p')
  .describe('match', 'throttle requests matching')
  .describe('skip', 'bypass throttling requests matching')
  .string(['match', 'skip'])
  .check(function (config) {

    function checkString(val) {
      if (typeof val == "boolean" && val) {
        return true;
      } else if (typeof val == "undefined" || (typeof val == "boolean" && !val)) {
        return false;
      } else {
        return !(typeof val == "string" && val.length > 0);
      }
    }

    if (isNaN(parseInt(config.speed))) {
      throw new Error("speed must be a number");
    }
    if (isNaN(parseInt(config.port))) {
      throw new Error("port must be a number");
    }
    if (config.match && config.skip) {
      throw new Error("simultaneous use of --match and --skip is not allowed");
    }
    if (checkString(config.match)) {
      throw new Error("wrong --match pattern");
    }
    if (checkString(config.skip)) {
      throw new Error("wrong --skip pattern");
    }

    return true;
  });

var config = argv.argv;

var pattern = config.match ? config.match : config.skip;
var skip = !!config.skip;

proxy(config.speed, pattern, skip)
  .listen(config.port, function () {
    console.log("Proxy server started on port %d", config.port);
    console.log("Throttle speed is limited to %d bytes per second", config.speed);
    if (pattern) {
      console.log("%s %s", skip ? "Skipping" : "Matching", pattern);
    } else {
      console.log("For any request");
    }
  });
